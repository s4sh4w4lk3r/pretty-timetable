server {
    listen 80;
    listen [::]:80;

    include conf.d/upstreams;
    include conf.d/proxy_params;

    location /api {

        location /api/auth {
            proxy_pass $upstream_frontend;
        }

        proxy_pass $upstream_backend;
    }

    location ~ ^/auth/(realms|resources|robots.txt) {
        proxy_buffer_size   128k;
        proxy_buffers   4 256k;
        proxy_busy_buffers_size   256k;
        
        proxy_pass $upstream_keycloak;
    }

    location / {
        proxy_pass $upstream_frontend;
    }
}

# server {
#     listen 80;
#     listen [::]:80;
#     server_name localhost;

#     include conf.d/upstreams;

#     location /auth {
#         include conf.d/proxy_params;
#         proxy_pass $upstream_keycloak;
#     }

#     location / {
#         return 308 http://domain$request_uri;
#     }
# }


# server {
#     listen 80;
#     listen [::]:80;

#     server_name xxx www.xxx;
#     server_tokens off;

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     location / {
#         return 301 https://xxx$request_uri;
#     }
# }

# docker compose run --rm  certbot certonly --webroot --webroot-path /var/www/certbot/ -d xxx
# Расскоментить ниже, когда появится сертификат.

# server {
#     listen 443 default_server ssl http2;
#     listen [::]:443 ssl http2;

#     server_name xxx;
#     server_tokens off;

#     ssl_certificate /etc/nginx/ssl/live/xxx/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/live/xxx/privkey.pem;
    
#    include conf.d/locations;
# }