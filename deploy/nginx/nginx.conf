server {
    listen 80;
    listen [::]:80;

    server_name xxx www.xxx;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # location / {
    #     return 301 https://xxx$request_uri;
    # }
}

# docker compose run --rm  certbot certonly --webroot --webroot-path /var/www/certbot/ -d xxx
# Расскоментить ниже, когда появится сертификат.

# server {
#     listen 443 default_server ssl http2;
#     listen [::]:443 ssl http2;

#     server_name xxx;
#     server_tokens off;

#     ssl_certificate /etc/nginx/ssl/live/xxx/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/live/xxx/privkey.pem;
    
#     location / {
#         root   /usr/share/nginx/html;
#         index  index.html index.htm;
#     }

#     location /auth/ {

#         proxy_pass http://keycloak:8080/;
           
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $remote_addr;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header X-Forwarded-Port 443;
#     }

#     location /api {

#         proxy_pass http://aspnet:5000;
           
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $remote_addr;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header X-Forwarded-Port 443;
#     }
# }